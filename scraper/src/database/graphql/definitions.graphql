query AllRecords {
  records {
    id
    active
    boundary
    label
    periodicity
    url
    tags: tags_records_relations {
      tag {
        tag_name
        id
      }
    }
  }
}

query GetRecord($id: Int = 1) {
  records_by_pk(id: $id) {
    active
    boundary
    id
    label
    periodicity
    url
  }
}

mutation DeleteRecord($id: Int = 1) {
  delete_records(where: {id: {_eq: $id}}) {
    affected_rows
  }
}

mutation InsertRecord($url: String = "", $periodicity: Int = 1, $label: String = "", $boundary: String = "", $active: Boolean = false) {
  insert_records_one(object: {active: $active, boundary: $boundary, label: $label, periodicity: $periodicity, url: $url}) {
    id
  }
}

mutation UpdateRecord($id: Int = 1, $dataToUpdate: records_set_input = {}) {
  update_records(where: {id: {_eq: $id}}, _set: $dataToUpdate) {
    affected_rows
  }
}


mutation InsertTagsRecordRelations($objects: [tags_records_relations_insert_input!] = {record_id: 1, tag_id: 1}) {
  insert_tags_records_relations(objects: $objects) {
    affected_rows
  }
}

query AllTagsRecordsRelations {
  tags_records_relations {
    id
    record_id
    tag_id
  }
}

mutation InsertTag($tag_name: String = "") {
  insert_tags_one(object: {tag_name: $tag_name}) {
    id
  }
}

query AllTags {
  tags {
    id
    tag_name
  }
}

query AllTagsInList($_in: [Int!] = []) {
  tags(where: {id: {_in: $_in}}) {
    id
  }
}

query CountOfTagsInList($_in: [Int!] = []) {
  tags_aggregate(where: {id: {_in: $_in}}) {
    aggregate {
      count
    }
  }
}

query TagsRecordRelationsByRecordId($recordId: Int = 1) {
  tags_records_relations(where: {record_id: {_eq: $recordId}}) {
    record_id
    id
    tag_id
  }
}

mutation DeleteTagsRecordRelationsByIds($relationsIds: [Int!] = []) {
  delete_tags_records_relations(where: {id: {_in: $relationsIds}}) {
    affected_rows
  }
}

mutation UpdateRecordRelationsByRecordIds($relationsIdsToDelete: [Int!] = [], $objects: [tags_records_relations_insert_input!] = {}) {
  delete_tags_records_relations(where: {id: {_in: $relationsIdsToDelete}}) {
    affected_rows
  }
  insert_tags_records_relations(objects: $objects) {
    affected_rows
  }
}

query GetNumberOfTags($tagName: String = "") {
  tags_aggregate(where: {tag_name: {_eq: $tagName}}) {
    aggregate {
      count
    }
  }
}

